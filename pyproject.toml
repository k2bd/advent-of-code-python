[tool.poetry]
name = "advent-of-code"
version = "0.1.0"
description = ""
authors = ["Kevin Duff <kevinkelduff@gmail.com>"]

[tool.poetry.dependencies]
python = ">=3.9, <4"
advent-of-code-data = "^2.0.1"

[tool.poetry.group.dev.dependencies]
pytest = "^6.2.5"
black = "^22.3.0"
isort = "^5.10.1"
flake8 = "^4.0.1"
pytest-cov = "^3.0.0"
poethepoet = "^0.11.0"
types-setuptools = "^57.4.4"
pyright = "^1.1.338"
typer = "^0.9.0"

[tool.isort]
profile = "black"
multi_line_output = 3

[tool.poe.tasks]
autoformat.sequence = [
    {cmd = "black src tests scripts"},
    {cmd = "isort src tests scripts"},
]

lint.sequence = [
    {cmd = "black --check -v src tests scripts"},
    {cmd = "isort --check -v src tests scripts"},
    {cmd = "flake8 src tests scripts"},
    {cmd = "pyright src tests scripts"},
]

[tool.poe.tasks.test]
cmd = "pytest -vv --cov=advent_of_code --cov-report term --cov-report xml"

[tool.poe.tasks.solve]
cmd = "python -m advent_of_code.y$year.d$day"
help = "Run the script for a particular day with my puzzle input"

[tool.poe.tasks.solve.args.year]
help = "Advent of Code year"
positional = true

[tool.poe.tasks.solve.args.day]
help = "Puzzle day"
positional = true

[tool.poe.tasks.setup]
sequence = [
    {cmd = "python scripts/boilerplate.py $year $day"},
    "get-input $year $day",
]
help = "Prepare boilerplate for a given day"

[tool.poe.tasks.setup.args.year]
help = "Advent of Code year"
positional = true

[tool.poe.tasks.setup.args.day]
help = "Puzzle day"
positional = true

[tool.poe.tasks.get-input]
cmd = "python scripts/get_input.py $year $day"
help = "Get puzzle input for a given day"

[tool.poe.tasks.get-input.args.year]
help = "Advent of Code year"
positional = true

[tool.poe.tasks.get-input.args.day]
help = "Puzzle day"
positional = true

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
